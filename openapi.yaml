openapi: 3.1.0
info:
  title: Coach Triathlon API
  description: API pour exposer les données d'entraînement depuis Strava (hebdo).
  version: 1.1.0
servers:
  - url: https://coachtriathlon.onrender.com
paths:
  /healthz:
    get:
      summary: Status de santé
      operationId: healthz
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
  /weekly-stats:
    get:
      summary: Statistiques hebdo (résumé)
      operationId: getWeeklyStats
      parameters:
        - in: query
          name: access_token
          required: false
          schema:
            type: string
          description: Strava OAuth access_token (sinon utilise la variable d'env ACCESS_TOKEN)
        - in: query
          name: types
          required: false
          schema:
            type: string
            default: tri
          description: >
            'tri' (Swim,Ride,Run) | 'endurance' (tri + cardio générique) | 'all' | liste CSV (ex: 'Ride,Run,Swim,Workout,WeightTraining').
      responses:
        "200":
          description: Données récupérées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_km: { type: number, example: 42.5 }
                  total_time_h: { type: number, example: 3.75 }
                  sessions: { type: integer, example: 6 }
                  counts_by_type:
                    type: object
                    additionalProperties:
                      type: integer
  /weekly-details:
    get:
      summary: Détails hebdo (par sport + activités)
      operationId: getWeeklyDetails
      parameters:
        - in: query
          name: access_token
          required: false
          schema:
            type: string
          description: Strava OAuth access_token (sinon utilise la variable d'env ACCESS_TOKEN)
        - in: query
          name: with_streams
          required: false
          schema:
            type: boolean
            default: false
          description: Inclure les séries temporelles HR/vitesse si disponibles
        - in: query
          name: types
          required: false
          schema:
            type: string
            default: tri
          description: >
            'tri' | 'endurance' | 'all' | liste CSV (ex: 'Ride,Run,Swim,Workout,WeightTraining').
      responses:
        "200":
          description: Données récupérées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: object
                    properties:
                      total_km: { type: number }
                      total_time_h: { type: number }
                      activities: { type: integer }
                  by_sport:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        count: { type: integer }
                        total_km: { type: number }
                        elev_gain_m: { type: number }
                        total_time_h: { type: number }
                        avg_hr: { type: number, nullable: true }
                        max_hr: { type: number, nullable: true }
                  activities:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: integer }
                        name: { type: string }
                        type: { type: string }
                        start_date_local: { type: string }
                        distance_km: { type: number }
                        moving_time_s: { type: integer }
                        elapsed_time_s: { type: integer }
                        elev_gain_m: { type: number }
                        avg_speed_kmh: { type: number, nullable: true }
                        max_speed_kmh: { type: number, nullable: true }
                        avg_heartrate: { type: number, nullable: true }
                        max_heartrate: { type: number, nullable: true }
                        suffer_score: { type: number, nullable: true }
                        trainer: { type: boolean }
                        commute: { type: boolean }
                        streams:
                          type: object
                          nullable: true
                          additionalProperties:
                            type: array
                            items: { type: number }
